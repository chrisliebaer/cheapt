//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.10

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user")]
pub struct Model {
	#[sea_orm(primary_key)]
	pub id: u64,
	#[sea_orm(column_type = "Binary(BlobSize::Blob(Some(16)))", unique)]
	pub uuid: Vec<u8>,
	#[sea_orm(unique)]
	pub discord_user_id: u64,
	#[sea_orm(column_type = "Text")]
	pub username: String,
	pub opt_out_since: Option<DateTimeUtc>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(has_one = "super::message_cache::Entity")]
	MessageCache,
}

impl Related<super::message_cache::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::MessageCache.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
